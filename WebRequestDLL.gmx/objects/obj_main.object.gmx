<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// working vars
//external_define("DLL_startexe.dll","startConvert",dll_cdecl, ty_real, 1, ty_real)
//external_define("rmvb.dll","removeBackslash",dll_cdecl, ty_real, 1, ty_real)

//external_call("startConvert",1)
show_debug_message("DLL CONVERT"+string(startConvert(1)))

cursor_inst = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Room info

EX_room_width = 0;
EX_room_height = 0;
EX_room_speed = 0;

alarm[0] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// save to json
var i, file;
rawstr = "";
file = file_text_open_read("tempjson.txt");

while(!file_text_eof(file))
{
    rawstr += file_text_read_string(file);
    file_text_readln(file)
}

file_text_close(file);

// decode string as json
var map = json_decode(rawstr);
var rmap = map[?"room"]
// prepare map.
var instList = ds_list_create();
var theInstMap;

for(i = 0; i &lt; instance_number(obj_instance); i++)
{
    var inst = instance_find(obj_instance,i); // Gets current inst
    
    theInstMap = ds_map_create();               // Gets a current map
    ds_map_add(theInstMap,"@objName",inst.EX_obj_name);          // Insert values
    ds_map_add(theInstMap,"@x",inst.x);
    ds_map_add(theInstMap,"@y",inst.y);
    ds_map_add(theInstMap,"@name",inst.EX_name);
    ds_map_add(theInstMap,"@locked",inst.EX_locked);
    ds_map_add(theInstMap,"@scaleX",inst.EX_scaleX);
    ds_map_add(theInstMap,"@scaleY",inst.EX_scaleY);
    ds_map_add(theInstMap,"@colour",inst.EX_color);
    ds_map_add(theInstMap,"@rotation",inst.EX_rotation);
    ds_list_add(instList,theInstMap); // add to list
}

ds_map_delete(rmap,"instances")
ds_map_add(rmap,"instances",instList);

ds_map_delete(map,"room")
ds_map_add(map,"room",json_encode(rmap))

var jstring = json_encode(map)
// create file and append
var file = file_text_open_write(working_directory+"\tempexport.txt")
file_text_write_string(file, jstring);
file_text_close(file);

show_message_async("saving..")
// call external to remove backslashes
//external_call("removeBackslash",1)
show_debug_message("RMVB: "+string(startRMVB(1)))

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load level JSON

var i, file;
rawstr = "";
file = file_text_open_read("tempjson.txt");

while(!file_text_eof(file))
{
    rawstr += file_text_read_string(file);
    file_text_readln(file)
}

file_text_close(file);

// decode string as json
var rmap = json_decode(rawstr);

// Set level room stats
scr_setRoomEX(rmap);

placeInstances(rmap);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move cursor element
if(cursor_inst != noone)
{
    cursor_inst.x = mouse_x;
    cursor_inst.y = mouse_y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>external_free("DLL_startexe.dll")
external_free("rmvb.dll")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw room specs

scr_drawTextOutlined(fnt_roomInfoGui,c_white,1,"room w: "+string(EX_room_width)+
        ", room h: "+string(EX_room_height)+", room speed: "+string(EX_room_speed)+
        ", inst: "+string(cursor_inst)
        ,32,32)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw room boundaries
drawRoomBoundaries(EX_room_width,EX_room_height)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
scr_freeDependencies();
game_end()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
